name: llm-cpp
on:
  pull_request:
    paths-ignore:
      - '**/README.md'
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  llm-cpp:
    runs-on: ubuntu-20.04-8-cores
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - uses: actions/checkout@v4
        with:
          repository: fxmarty/tiny-llama-fast-tokenizer
          ref: 7777c406a0733db432517f89575b9b5a02e371ef
          lfs: true
          github-server-url: https://huggingface.co
      - run: llm/cpp/set_up_and_run.sh
  llm-cpp-beam-search:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - uses: actions/checkout@v4
        with:
          repository: fxmarty/tiny-llama-fast-tokenizer
          ref: 7777c406a0733db432517f89575b9b5a02e371ef
          lfs: true
          github-server-url: https://huggingface.co
      - name: Install dependencies
        run: |
          ls
          python -m pip install --upgrade-strategy eager "optimum[openvino]>=1.14.0" ./thirdparty/openvino_contrib/modules/custom_operations/user_ie_extensions/tokenizer/python/[transformers] --extra-index-url https://download.pytorch.org/whl/cpu &
          mkdir ./ov/
          curl https://storage.openvinotoolkit.org/repositories/openvino/packages/2023.2/linux/l_openvino_toolkit_ubuntu20_2023.2.0.13089.cfd42bd2cb0_x86_64.tgz | tar --directory ./ov/ --strip-components 1 -xz
          sudo ./ov/install_dependencies/install_openvino_dependencies.sh
          wait
      - name: Download, convert and build
        run: |
          source ./ov/setupvars.sh
          cd tiny-llama-fast-tokenizer && git lfs pull && cd .. && optimum-cli export openvino -m fxmarty/tiny-llama-fast-tokenizer ./tiny-llama-fast-tokenizer/ &
          mkdir ./build/
          cd ./build/
          cmake -DCMAKE_BUILD_TYPE=Release ../
          cmake --build ./ --config Release -j
          wait
      - name: Grid search
        run: |
          source ./ov/setupvars.sh
          python ./llm/cpp/convert_tokenizers.py ./build/thirdparty/openvino_contrib/modules/custom_operations/user_ie_extensions/libuser_ov_extensions.so ./tiny-llama-fast-tokenizer/
          ./llm/cpp/grid_search.sh
