name: stable_diffusion_1_5_cpp
on:
  pull_request:
    paths:
      - image_generation/stable_diffusion_1_5/cpp/**
      - image_generation/common/**
      - .github/workflows/stable_diffusion_1_5_cpp.yml
      - thirdparty/openvino_tokenizers
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  stable_diffusion_1_5_cpp-linux:
    runs-on: ubuntu-20.04-8-cores
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup conda
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniconda-version: "latest"
          activate-environment: openvino_sd_cpp
          python-version: "3.10"

      - name: Install OpenVINO and other conda dependencies
        run: |
          conda install -c conda-forge openvino c-compiler cxx-compiler make cmake

      - name: Install python dependencies
        working-directory: ./image_generation/stable_diffusion_1_5/cpp/  # TODO Move working dir to workflow var
        run: |
          python -m pip install -r requirements.txt
          python -m pip install ../../../thirdparty/openvino_tokenizers/[transformers]

      - name: Download and convert model and tokenizer
        working-directory: ./image_generation/stable_diffusion_1_5/cpp/
        run: |
          export LD_LIBRARY_PATH="$CONDA_PREFIX/lib"
          export MODEL_PATH="models/stable_diffusion_v1_5_ov/FP16"
          optimum-cli export openvino --model runwayml/stable-diffusion-v1-5 --task stable-diffusion --convert-tokenizer --weight-format fp16 $MODEL_PATH
          convert_tokenizer $MODEL_PATH/tokenizer/ --tokenizer-output-type i32 -o $MODEL_PATH/tokenizer/

      - name: Build app
        working-directory: ./image_generation/stable_diffusion_1_5/cpp/
        run: |
          cmake -DCMAKE_BUILD_TYPE=Release -S ./ -B ./build/
          cmake --build ./build/ --config Release --parallel

      - name: Run app
        working-directory: ./image_generation/stable_diffusion_1_5/cpp/
        run: |
          ./build/stable_diffusion -m ./models/stable_diffusion_v1_5_ov -t FP16 --dynamic

  stable_diffusion_1_5_cpp-windows:
      runs-on: windows-latest
      steps:
        - uses: actions/checkout@v4
          with:
            submodules: recursive
        - uses: actions/setup-python@v4
          with:
            python-version: 3.8
        - name: Initialize OpenVINO
          shell: cmd
          run: |
            curl --output ov.zip https://storage.openvinotoolkit.org/repositories/openvino/packages/nightly/2024.1.0-14645-e6dc0865128/w_openvino_toolkit_windows_2024.1.0.dev20240304_x86_64.zip
            unzip ov.zip
        - name: Download and convert model and tokenizer
          shell: cmd
          run: |
            call w_openvino_toolkit_windows_2024.1.0.dev20240304_x86_64/setupvars.bat
            cd ./image_generation/stable_diffusion_1_5/cpp/
            python -m pip install -r ./requirements.txt
            python -m pip install ../../../thirdparty/openvino_tokenizers/[transformers]
            set MODEL_PATH=models/stable_diffusion_v1_5_ov/FP16
            optimum-cli export openvino --model runwayml/stable-diffusion-v1-5 --task stable-diffusion --convert-tokenizer --weight-format fp16 %MODEL_PATH%
            convert_tokenizer %MODEL_PATH%/tokenizer/ --tokenizer-output-type i32 -o %MODEL_PATH%/tokenizer/
        - name: Build app
          shell: cmd
          run: |
            call w_openvino_toolkit_windows_2024.1.0.dev20240304_x86_64/setupvars.bat
            cd ./image_generation/stable_diffusion_1_5/cpp/
            cmake -DCMAKE_BUILD_TYPE=Release -S ./ -B ./build/
            cmake --build ./build/ --config Release --parallel
        - name: Run app
          shell: cmd
          run: |
            call w_openvino_toolkit_windows_2024.1.0.dev20240304_x86_64/setupvars.bat
            cd ./image_generation/stable_diffusion_1_5/cpp/
            call "./build/Release/stable_diffusion.exe" -m ./models/stable_diffusion_v1_5_ov -t FP16 --dynamic
